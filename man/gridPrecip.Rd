% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gridPrecip.R
\name{gridPrecip}
\alias{gridPrecip}
\title{Grids station precipitation}
\usage{
gridPrecip(precip = NULL, source_file_name = "unknown",
  shed_raster = NULL, IDW_file = NULL, missing_value = 0,
  quiet = TRUE, progress_bar = TRUE)
}
\arguments{
\item{precip}{Required. A list containing 3 elements: 1. the header meta data,
2. the column meta data, and 3. the precipitation values (in mm). These values
are returned automatically by the \pkg{MESHr} command \code{read_tb0}. Note
that the precipitation values are in mm.}

\item{source_file_name}{Required. The name of the original \code{.tb0} source file. 
Default value is \code{unknown}. The name of the source file is written to
the \code{r2c} file header.}

\item{shed_raster}{Required. A \code{RasterBrick} object describing the MESH basin.
This can be created using the \pkg{MESHr} command \code{read_r2c_shed} with the
parameter \code{as_rasters = TRUE}.}

\item{IDW_file}{Required. Name of the output file which holds gridded precipitation for all
time steps.}

\item{missing_value}{Required. Value to be used if all values in an interval 
are missing. Default is \code{0}. Also used to code individual missing values.}

\item{quiet}{Optional. If \code{TRUE} (the default), messages are suppressed.
If \code{FALSE}, the time interval and messages from each gridding are listed.}

\item{progress_bar}{Optional. If \code{TRUE} (the default), a progress bar is
displayed showing the completed fraction of the \code{precip}.}
}
\value{
If unsuccessful, returns \code{FALSE}. If successful, returns
\code{TRUE} and the gridded precipitation values are written to the
\code{IDW_file}. Note that each interval's precipitation is written as it
is gridded. This saves on memory, and will save at least some of the values
in case there is a crash, but is slower. The gridded precipitation
is in mm/s.
}
\description{
Grids station interval precipitation values, so that they can
be used as MESH inputs. The gridding method is performed by the \pkg{hydroTSM}
function \code{hydrokrige}, using the IDW (inverse distance weighting) algorithm.
}
\examples{
\dontrun{
hourly_precip_file <- "Red_Deer_all_hourly_precip_new.tb0"
precip <- read_tb0(hourly_precip_file, values_only = FALSE, timezone = "Etc/GMT+7", NAvalue = -0.1)
shedfile <- "RedDeer_MESH_drainage_database.r2c"
shed_raster <- read_r2c_shed(shedfile, as_rasters = TRUE, values_only = TRUE)
IDW_file <- "RedDeerPrecip_idw.r2c"
source_file_name <- "Red_Deer_all_hourly_precip_new.tb0"
gridPrecip(precip, source_file_name, shed_raster, IDW_file)
}
}
\seealso{
\code{\link{gridTemp}} \code{\link{read_r2c_shed}} \code{\link{read_tb0}}
}
\author{
Kevin Shook
}
